<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - LoanBot</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            background: #000000;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
        }

        /* Network Animation */
        #network-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }

        /* Glowing dots */
        .node {
            position: absolute;
            width: 4px;
            height: 4px;
            background: #64ffda;
            border-radius: 50%;
            box-shadow: 0 0 10px #64ffda, 0 0 20px #64ffda, 0 0 30px #64ffda;
            animation: glow 2s infinite;
        }

        @keyframes glow {
            0% { opacity: 0.3; }
            50% { opacity: 1; }
            100% { opacity: 0.3; }
        }

        .auth-container {
            background: rgba(10, 10, 10, 0.8);
            padding: 2.5rem;
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.6);
            width: 90%;
            max-width: 400px;
            position: relative;
            z-index: 2;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(100, 255, 218, 0.1);
        }

        .logo-container {
            text-align: center;
            margin-bottom: 2rem;
            position: relative;
        }

        .logo {
            width: 80px;
            height: 80px;
            background: linear-gradient(45deg, #64ffda, #000000);
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1rem;
            position: relative;
            overflow: hidden;
        }

        .logo::before {
            content: '';
            position: absolute;
            width: 150%;
            height: 150%;
            background: conic-gradient(from 0deg, transparent 0deg, #64ffda 360deg);
            animation: rotate 2s linear infinite;
        }

        .logo::after {
            content: '';
            position: absolute;
            inset: 3px;
            background: #000000;
            border-radius: 50%;
            z-index: 1;
        }

        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        .logo i {
            font-size: 2rem;
            color: #64ffda;
            z-index: 2;
        }

        h2 {
            color: #64ffda;
            text-align: center;
            margin-bottom: 0.5rem;
            font-size: 1.8rem;
            text-shadow: 0 0 10px rgba(100, 255, 218, 0.3);
        }

        .subtitle {
            text-align: center;
            color: #8892b0;
            margin-bottom: 2rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: #64ffda;
            font-weight: 500;
        }

        .form-group input {
            width: 100%;
            padding: 0.8rem;
            background: rgba(10, 10, 10, 0.8);
            border: 2px solid rgba(100, 255, 218, 0.2);
            border-radius: 8px;
            font-size: 1rem;
            color: #ccd6f6;
            transition: all 0.3s ease;
        }

        .form-group input:focus {
            border-color: #64ffda;
            box-shadow: 0 0 10px rgba(100, 255, 218, 0.2);
            outline: none;
        }

        .error-message {
            background: rgba(255, 107, 107, 0.2);
            color: #ff6b6b;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            text-align: center;
            border: 1px solid rgba(255, 107, 107, 0.4);
            animation: shake 0.5s ease-in-out;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        .auth-button {
            width: 100%;
            padding: 1rem;
            background: transparent;
            color: #64ffda;
            border: 2px solid #64ffda;
            border-radius: 8px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .auth-button::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 100%;
            height: 100%;
            background: rgba(100, 255, 218, 0.1);
            transform: translate(-50%, -50%) scale(0);
            transition: transform 0.5s ease;
            border-radius: 8px;
        }

        .auth-button:hover::before {
            transform: translate(-50%, -50%) scale(1);
        }

        .auth-button:hover {
            box-shadow: 0 0 20px rgba(100, 255, 218, 0.2);
        }

        .auth-link {
            text-align: center;
            margin-top: 1.5rem;
            color: #8892b0;
        }

        .auth-link a {
            color: #64ffda;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .auth-link a:hover {
            text-shadow: 0 0 10px rgba(100, 255, 218, 0.5);
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <canvas id="network-animation"></canvas>
    <div class="auth-container">
        <div class="logo-container">
            <div class="logo">
                <i class="fas fa-chart-line"></i>
            </div>
            <h2>Welcome to LoanBot</h2>
            <p class="subtitle">Your AI-powered loan assistant</p>
        </div>

        <% if (error) { %>
            <div class="error-message"><%= error %></div>
        <% } %>

        <form action="/login" method="POST">
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" required autocomplete="email">
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit" class="auth-button">Login</button>
        </form>
        <p class="auth-link">Don't have an account? <a href="/signup">Sign up</a></p>
    </div>

    <script>
        // Network Animation
        const canvas = document.getElementById('network-animation');
        const ctx = canvas.getContext('2d');

        // Set canvas size
        function setCanvasSize() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        }
        setCanvasSize();
        window.addEventListener('resize', setCanvasSize);

        // Node class
        class Node {
            constructor() {
                this.x = Math.random() * canvas.width;
                this.y = Math.random() * canvas.height;
                this.vx = (Math.random() - 0.5) * 0.5;
                this.vy = (Math.random() - 0.5) * 0.5;
                this.radius = 2;
            }

            update() {
                this.x += this.vx;
                this.y += this.vy;

                if (this.x < 0 || this.x > canvas.width) this.vx *= -1;
                if (this.y < 0 || this.y > canvas.height) this.vy *= -1;
            }

            draw() {
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
                ctx.fillStyle = '#64ffda';
                ctx.fill();
                ctx.closePath();
            }
        }

        // Create nodes
        const nodes = [];
        const nodeCount = 50;
        for (let i = 0; i < nodeCount; i++) {
            nodes.push(new Node());
        }

        // Animation loop
        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            
            // Update and draw nodes
            nodes.forEach(node => {
                node.update();
                node.draw();
            });

            // Draw connections
            nodes.forEach((node1, i) => {
                nodes.slice(i + 1).forEach(node2 => {
                    const distance = Math.hypot(node1.x - node2.x, node1.y - node2.y);
                    if (distance < 150) {
                        ctx.beginPath();
                        ctx.moveTo(node1.x, node1.y);
                        ctx.lineTo(node2.x, node2.y);
                        ctx.strokeStyle = `rgba(100, 255, 218, ${1 - distance/150})`;
                        ctx.lineWidth = 1;
                        ctx.stroke();
                        ctx.closePath();
                    }
                });
            });

            requestAnimationFrame(animate);
        }

        animate();

        // Input animations
        const inputs = document.querySelectorAll('input');
        inputs.forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'scale(1.02)';
            });
            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'scale(1)';
            });
        });
    </script>
</body>
</html> 